// Code generated by protoc-gen-go.
// source: agent/report/mess/mem.proto
// DO NOT EDIT!

package mess

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Mem struct {
	Total      uint64 `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
	Used       uint64 `protobuf:"varint,2,opt,name=Used" json:"Used,omitempty"`
	Free       uint64 `protobuf:"varint,3,opt,name=Free" json:"Free,omitempty"`
	ActualFree uint64 `protobuf:"varint,4,opt,name=ActualFree" json:"ActualFree,omitempty"`
	ActualUsed uint64 `protobuf:"varint,5,opt,name=ActualUsed" json:"ActualUsed,omitempty"`
}

func (m *Mem) Reset()                    { *m = Mem{} }
func (m *Mem) String() string            { return proto.CompactTextString(m) }
func (*Mem) ProtoMessage()               {}
func (*Mem) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func init() {
	proto.RegisterType((*Mem)(nil), "mess.Mem")
}

func init() { proto.RegisterFile("agent/report/mess/mem.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4c, 0x4f, 0xcd,
	0x2b, 0xd1, 0x2f, 0x4a, 0x2d, 0xc8, 0x2f, 0x2a, 0xd1, 0xcf, 0x4d, 0x2d, 0x2e, 0x06, 0x12, 0xb9,
	0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xbe, 0x52, 0x33, 0x23, 0x17, 0xb3, 0x6f,
	0x6a, 0xae, 0x90, 0x08, 0x17, 0x6b, 0x48, 0x7e, 0x49, 0x62, 0x8e, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x4b, 0x10, 0x84, 0x23, 0x24, 0xc4, 0xc5, 0x12, 0x5a, 0x9c, 0x9a, 0x22, 0xc1, 0x04, 0x16, 0x04,
	0xb3, 0x41, 0x62, 0x6e, 0x45, 0xa9, 0xa9, 0x12, 0xcc, 0x10, 0x31, 0x10, 0x5b, 0x48, 0x8e, 0x8b,
	0xcb, 0x31, 0xb9, 0xa4, 0x34, 0x31, 0x07, 0x2c, 0xc3, 0x02, 0x96, 0x41, 0x12, 0x41, 0xc8, 0x83,
	0x4d, 0x63, 0x45, 0x96, 0x07, 0x89, 0x24, 0xb1, 0x81, 0x9d, 0x64, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xa6, 0xb8, 0x8d, 0x94, 0xb1, 0x00, 0x00, 0x00,
}
