var program = require('commander');
var path = require('path');
var fs = require('fs');
var chalk = require('chalk');


program
    .version('-v, --version', 'output the version number')
    .option('-s, --show', 'specify entire log file (error and out are both included)')
    .option('-l, --line <n>', 'specify out log file', parseInt)
    .option('-f,--flase <string>','show log-err')
    .usage('[cmd] log');


program.on('--help', function() {
    console.log('  Basic Examples:');
    console.log('');
    console.log('    specify entire log file (error and out are both included) :');
    console.log('    $ log -s');
    console.log('');
    console.log('    specify out log file :');
    console.log('    $ log -s -l<n>');
    console.log('');
    console.log('');
});



var url = path.resolve('../');
url += "\\agent.log";

program.parse(process.argv);
if(program.line==undefined)program.line=10;
if (program.show==undefined&&program.flase==undefined) {
    var remaining = '  ';
    var start = Math.max(0, fs.statSync(url).size - (program.line * 200));
    var fd = fs.createReadStream(url, { start: start });



    fd.on('data', function(data) {
        remaining += data;
        var index = remaining.indexOf('\n');
        var last = 0;
        while (index > -1) {
            var line = remaining.substring(last, index);
            last = index + 1;
            func(line);
            index = remaining.indexOf('\n', last);
        }
        remaining = remaining.substring(last);
    });
    fd.on('end', function() {
        if (remaining.length > 0) {
            func(remaining);
        }
    });
    function func(data) {
        if (data.indexOf('[ERR]') > -1) {
            console.log(chalk.red('log-err:  |') + data);
        } else {
            console.log(chalk.blue('log-true: |') + data);
        }
    }
}

console.log(program.flase);
if (program.show==undefined&&program.flase=='e') {

    var remaining = '  ';
    var start = Math.max(0, fs.statSync(url).size - (program.line * 200));
    var fd = fs.createReadStream(url, { start: start });


    fd.on('data', function(data) {
        remaining += data;
        var index = remaining.indexOf('\n');
        var last = 0;
        while (index > -1) {
            var line = remaining.substring(last, index);
            last = index + 1;
            funcerr(line);
            index = remaining.indexOf('\n', last);
        }
        remaining = remaining.substring(last);
    });
    fd.on('end', function() {
        if (remaining.length > 0) {
            funcerr(remaining);
        }
    });
    fd.on('end', function() {
        if (remaining.length > 0) {
            funcerr(remaining);
        }
    });
    function funcerr(data) {
        if (data.indexOf('[ERR]') > -1) {
            console.log(chalk.red('log-err:  |') + data);
        }
    }
}




console.log("日志路径：%s", url);
console.log(' line: %j', program.line);


